{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/Header.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","Helmet","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieAPI","get","append_to_response","term","query","encodeURIComponent","tvAPI","HomeContainer","state","a","data","results","this","setState","React","Component","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImg","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Detail","Search","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e403b5cf.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px; \n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">⏰</span>\n    </Container>\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Message = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired, \n    color: PropTypes.string.isRequired \n}\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false}) => \n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={\n                    imageUrl \n                    ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                    : \"https://images.unsplash.com/photo-1532630571098-79a3d222b00d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1138&q=80\"\n                    } />\n                <Rating><span role=\"img\" aria-label=\"rating\">⭐</span>{rating}/10</Rating>\n            </ImageContainer>\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>;\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({nowPlaying, upcoming, popular, error, loading }) => loading ? <Loader /> :\n    <Container>\n        <Helmet>\n            <title>Movies | Zooflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n                {nowPlaying.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id} \n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />))}\n            </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n                {upcoming.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id} \n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />))}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n                {popular.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id} \n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />))}\n            </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n    </Container>;\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"99f8c0795c7cdfbf95e8af518c55369f\",\n        language: \"en-US\"\n    }\n});\n\nexport const movieAPI = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};\n\nexport const tvAPI = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieAPI } from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {data: {results: nowPlaying}} = await movieAPI.nowPlaying();\n            const {data: {results: upcoming}} = await movieAPI.upcoming();\n            const {data: {results: popular}} = await movieAPI.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch {\n            this.setState({error: \"Can't find movies information.\"});\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n             nowPlaying={nowPlaying} \n             upcoming={upcoming} \n             popular={popular} \n             error={error}\n             loading={loading}\n             />\n        );\n    }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n        \nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0px 0px;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8)\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname }}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, error, loading }) => loading ? <Loader /> :\n    <Container>\n        <Helmet>\n            <title>TV Shows | Zooflix</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated TV Shows\">\n                {topRated.map(show => (\n                    <Poster \n                        key={show.id}\n                        id={show.id} \n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />))}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular TV Shows\">\n                {popular.map(show => (\n                    <Poster \n                        key={show.id}\n                        id={show.id} \n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />))}\n            </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today\">\n                {airingToday.map(show => (\n                    <Poster \n                        key={show.id}\n                        id={show.id} \n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />))}\n            </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n    </Container>;\n\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvAPI } from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try{\n            const {data: {results: topRated}} = await tvAPI.topRated();\n            const {data: {results: popular}} = await tvAPI.popular();\n            const {data: {results: airingToday}} = await tvAPI.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            });\n        } catch {\n            this.setState({error: \"Can't find TV shows information.\"});\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, error, loading } = this.state;\n        return (\n            <TVPresenter \n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({movieResults, tvResults, searchTerm, error, loading, handleSubmit, updateTerm }) => \n    <Container>\n        <Helmet>\n            <title>Search | Zooflix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n        </Form>\n        {loading ? <Loader /> : <>\n            {movieResults && movieResults.length > 0 && (\n                <Section title=\"Movie Results\">\n                    {movieResults.map(movie => (\n                        <Poster \n                            key={movie.id}\n                            id={movie.id} \n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />))}\n                </Section>\n            )}\n\n            {tvResults && tvResults.length > 0 && (\n                <Section title=\"TV Show Results\">\n                    {tvResults.map(show => (\n                        <Poster \n                            key={show.id}\n                            id={show.id} \n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                            isMovie={false}\n                        />))}\n                </Section>\n            )}\n        </>}\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n            <Message color=\"#95a5a6\" text=\"Nothing Found\"/>\n        )}\n    </Container>;\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieAPI, tvAPI } from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    searchByTerm = async() => {\n        const { searchTerm } = this.state;\n        this.setState({loading: true});\n        try {\n            const {data: {results: movieResults}} = await movieAPI.search(searchTerm);\n            const {data: {results: tvResults}} = await tvAPI.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults,\n            });\n        } catch {\n            this.setState({error: \"Can't find results.\"});\n        } finally {\n            this.setState({loading: false});\n        }\n    };\n\n    updateTerm = event => {\n        const { target: {value} } = event;\n        this.setState({\n            searchTerm: value\n        });\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n        return (\n            <SearchPresenter \n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImg});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    height: 100%;\n    background-image: url(${props => props.bgImg});\n    background-position: center center;\n    background-size: cover;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    height: 100%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\nconst DetailPresenter = ({result, error, loading }) => (\n    loading ? (<Loader />) : \n    (\n        <Container>\n            <Helmet>\n                <title>{result.original_title ? result.original_title : result.original_name} | Zooflix</title>\n            </Helmet>\n            <Backdrop bgImg={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n            <Content>\n                <Cover bgImg={result.poster_path ? \n                `https://image.tmdb.org/t/p/original${result.poster_path}` \n                : \"https://images.unsplash.com/photo-1532630571098-79a3d222b00d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1138&q=80\"\n                } />\n            <Data>\n                <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                <ItemContainer>\n                    <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\n                    <Divider>•</Divider>\n                    <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\n                    <Divider>•</Divider>\n                    <Item>{result.genres && \n                        result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `)}\n                    </Item>\n                </ItemContainer>\n                <Overview>{result.overview}</Overview>\n            </Data>\n            </Content>\n        </Container>\n    )\n);\n\nDetailPresenter.propTypes = {\n    result: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieAPI, tvAPI } from \"api\";\n\nexport default class extends React.Component{\n    constructor(props) {\n        super(props);\n        const { location: {pathname}} = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const {match: {params: {id}}, history: {push}} = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n\n        let result = null;\n        try {\n            if (isMovie) {\n                ({data: result} = await movieAPI.movieDetail(parsedId));\n            } else {\n                ({data: result} = await tvAPI.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find anything.\" });\n        } finally {\n            this.setState({ loading: false, result });\n        }\n\n    } \n\n    render() {\n        const { result, error, loading } = this.state;\n        return (\n            <DetailPresenter \n                result={result}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Header from \"Components/Header\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" exact component={TV} />\n                <Route path=\"/movie/:id\"  component={Detail} />\n                <Route path=\"/tv/:id\"  component={Detail} />\n                <Route path=\"/search\"  component={Search} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}